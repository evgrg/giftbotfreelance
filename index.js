const db = require("./config.json");const count = require("./db.json");const users = require("./users.json");const fs = require("fs");const TelegramBot = require("node-telegram-bot-api");const { Keyboard } = require('telegram-keyboard');const bot = new TelegramBot(db.token, {  polling: true,});let keyboard1 = Keyboard.make([['–°–ö–ê–ß–ê–¢–¨ –ü–û–î–ê–†–û–ö'], ['–ê–ù–ö–ï–¢–ê –Ω–∞ –†–ê–ó–ë–û–† –ë–ò–ó–ù–ï–°–ê']]);bot.on("message", async (msg) => {  const chat_id = msg.chat.id;  const command = msg.text.replace("/", "");  console.log(command);  console.log(chat_id);  let text = command.replace('send ', '');  if (command !== 'start' && command !== '–°–ö–ê–ß–ê–¢–¨ –ü–û–î–ê–†–û–ö' && command !== '–ê–ù–ö–ï–¢–ê –Ω–∞ –†–ê–ó–ë–û–† –ë–ò–ó–ù–ï–°–ê') sendRequest(chat_id, text)  switch (command) {    case 'start':    return bot.sendMessage(        chat_id,        'üëã –ü—Ä–∏–≤–µ—Ç! –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: 10 –®–ê–ì–û–í –ú–ê–°–®–¢–ê–ë–ò–†–û–í–ê–ù–ò–Ø –ë–ò–ó–ù–ï–°–ê" –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:',        keyboard1.reply()      );    break;    case '–°–ö–ê–ß–ê–¢–¨ –ü–û–î–ê–†–û–ö':      console.log(await checkSub(chat_id))      if (await checkSub(chat_id)) {        if(!users.includes(chat_id)) setTimerForRequest(chat_id);        bot.sendMessage(chat_id, 'üëá –í–æ—Ç –í–∞—à –ø–æ–¥–∞—Ä–æ–∫');        bot.sendDocument(chat_id, db.pathToFile);        count.count = Number(count.count) + 1;        if (!users.includes(chat_id)) users.push(chat_id);        fs.writeFileSync('users.json', JSON.stringify(users));        fs.writeFileSync('db.json', JSON.stringify(count));        return sendInfo();      } else {        bot.sendMessage(chat_id, '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª: ' + db.channelName + '. –ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –°–ö–ê–ß–ê–¢–¨ –ü–û–î–ê–†–û–ö –µ—â–µ —Ä–∞–∑.')      }      break;    case '–ê–ù–ö–ï–¢–ê –Ω–∞ –†–ê–ó–ë–û–† –ë–ò–ó–ù–ï–°–ê':      bot.sendMessage(        chat_id,        '–î–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ê–ù–ö–ï–¢–´ –Ω–∞ –†–ê–ó–ë–û–† –≤ –ø–æ–ª–µ: –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ‚Ä¶ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: \n \n–í–∞—à–µ –∏–º—è, –ë–∏–∑–Ω–µ—Å –Ω–∏—à–∞, –û–±–æ—Ä–æ—Ç, –°–∞–π—Ç, –¢–µ–ª–µ—Ñ–æ–Ω, E-Mail, –ì–æ—Ä–æ–¥'      )      break;  }});bot.on("callback_query", (query) => {  const {message: {chat, message_id} = {}} = query;  bot.answerCallbackQuery({    callback_query_id: query.id  });});async function checkSub(id, type) {    const data = await bot.getChatMember(db.channelName, id);    console.log(data);    if (data.status === "left" || data.status === "kicked") return false  else return true;}function sendRequest(chat_id, text) {  bot.sendMessage(chat_id, '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');  bot.sendMessage(Number(db.adminId),'–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê \n \n ' + text);}function setTimerForRequest(chat_id) {  console.log('start setTimeForRequest');  setTimeout(function () {    bot.sendMessage(      chat_id,      '–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –Ω–∞ —Ä–∞–∑–±–æ—Ä, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É'    );  }, 300000);}function sendInfo() {  bot.sendMessage(Number(db.adminId),'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫–∞—á–∞–ª —Ñ–∞–π–ª. –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π: ' + count.count);}console.log("Bot start!");